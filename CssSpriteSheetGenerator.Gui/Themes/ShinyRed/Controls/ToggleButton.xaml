<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008">
    <Style x:Key="BugFix" />

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../_Shared.xaml" />
        <ResourceDictionary>
            <Style x:Key="ButtonFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle SnapsToDevicePixels="true"
                                       Margin="2"
                                       Stroke="Black"
                                       StrokeDashArray="1 2"
                                       StrokeThickness="1" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="NuclearTreeViewItemToggleButton" d:IsControlPart="True" TargetType="{x:Type ToggleButton}">
                <Setter Property="Focusable" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Grid Width="15" Height="13" Background="Transparent">
                                <Path Visibility="Collapsed"
                                      HorizontalAlignment="Left"
                                      Margin="1,1,1,1"
                                      x:Name="IsExpandedPath"
                                      VerticalAlignment="Center"
                                      Data="M 0 4 L 8 4 L 4 8 Z">
                                    <Path.Fill>
                                        <SolidColorBrush Color="{DynamicResource BlackColor}" />
                                    </Path.Fill>
                                </Path>
                                <Path HorizontalAlignment="Left"
                                      Margin="1,1,1,1"
                                      x:Name="ExpandPath"
                                      VerticalAlignment="Center"
                                      Data="M 4 0 L 8 4 L 4 8 Z">
                                    <Path.Fill>
                                        <SolidColorBrush Color="{DynamicResource BlackColor}" />
                                    </Path.Fill>
                                </Path>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Visibility" Value="Visible" TargetName="IsExpandedPath" />
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="ExpandPath" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type ToggleButton}">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                    </Trigger>
                </Style.Triggers>
                <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
                <Setter Property="Background" Value="{DynamicResource SelectedBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource NormalBrush}" />
                <Setter Property="BorderThickness" Value="2,2,2,2" />
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="HoverOn">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundAnimation"
                                                                   Storyboard.TargetProperty="Opacity">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="HoverOff">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundAnimation"
                                                                   Storyboard.TargetProperty="Opacity">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="CheckedOn">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                   Storyboard.TargetName="CheckedBorder"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="CheckedOff">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                   Storyboard.TargetName="CheckedBorder"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Grid>
                                <Border x:Name="Background"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="4,4,4,4"
                                        Opacity="0.9" />
                                <Border x:Name="CheckedBorder"
                                        Opacity="0"
                                        Background="{StaticResource NormalBrush}"
                                        BorderBrush="{DynamicResource NormalBrush}"
                                        BorderThickness="2,2,2,2"
                                        CornerRadius="4" />
                                <Border x:Name="BackgroundAnimation"
                                        Opacity="0"
                                        Background="{StaticResource HoverBrush}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="4" />
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  RecognizesAccessKey="True" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="True" />
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Trigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource HoverOff}"
                                                         x:Name="HoverOff_BeginStoryboard" />
                                    </Trigger.ExitActions>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource HoverOn}"
                                                         x:Name="HoverOn_BeginStoryboard" />
                                    </Trigger.EnterActions>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true" />
                                <Trigger Property="IsChecked" Value="true">
                                    <Trigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource CheckedOff}"
                                                         x:Name="CheckedOff_BeginStoryboard" />
                                    </Trigger.ExitActions>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource CheckedOn}"
                                                         x:Name="CheckedOn_BeginStoryboard" />
                                    </Trigger.EnterActions>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background"
                                            TargetName="Background"
                                            Value="{DynamicResource DisabledBackgroundBrush}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="Background"
                                            Value="{DynamicResource DisabledBorderBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>
</ResourceDictionary>