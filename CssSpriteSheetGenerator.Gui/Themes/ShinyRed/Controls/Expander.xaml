<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="BugFix" />

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../_Shared.xaml" />
        <ResourceDictionary>
            <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="HoverOn">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                   Storyboard.TargetName="HoverRectangle"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="HoverOff">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                   Storyboard.TargetName="HoverRectangle"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="PressedOn">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                   Storyboard.TargetName="Rectangle"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.6" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="PressedOff">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                   Storyboard.TargetName="Rectangle"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Border Padding="{TemplateBinding Padding}"
                                    Background="#FFFFFFFF"
                                    BorderBrush="{DynamicResource NormalBorderBrush}"
                                    BorderThickness="1,1,1,1"
                                    CornerRadius="2,2,2,2"
                                    x:Name="border">
                                <Grid SnapsToDevicePixels="False" Background="Transparent">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="21" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Rectangle Margin="3,3,3,3"
                                               x:Name="Rectangle"
                                               Fill="{DynamicResource NormalBrush}"
                                               Stroke="{DynamicResource NormalBorderBrush}"
                                               StrokeThickness="1"
                                               RadiusX="2"
                                               RadiusY="2" />
                                    <Rectangle Margin="3,3,3,3"
                                               x:Name="HoverRectangle"
                                               Fill="{DynamicResource HoverBrush}"
                                               Stroke="{DynamicResource NormalBorderBrush}"
                                               StrokeThickness="1"
                                               RadiusX="2"
                                               RadiusY="2"
                                               Opacity="0" />
                                    <Path HorizontalAlignment="Center"
                                          x:Name="Up_Arrow"
                                          VerticalAlignment="Center"
                                          Fill="{DynamicResource GlyphBrush}"
                                          Data="M 0 0 L 4 4 L 8 0 Z" />
                                    <Path Visibility="Collapsed"
                                          HorizontalAlignment="Center"
                                          x:Name="Down_Arrow"
                                          VerticalAlignment="Center"
                                          Fill="{DynamicResource GlyphBrush}"
                                          Data="M 0 4 L 4 0 L 8 4 Z" />
                                    <ContentPresenter SnapsToDevicePixels="True"
                                                      HorizontalAlignment="Left"
                                                      Margin="4,3,0,3"
                                                      VerticalAlignment="Center"
                                                      Grid.Column="1"
                                                      RecognizesAccessKey="True" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Fill"
                                            TargetName="Rectangle"
                                            Value="{DynamicResource DisabledBackgroundBrush}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="border"
                                            Value="{DynamicResource DisabledBorderBrush}" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Visibility" TargetName="Down_Arrow" Value="Visible" />
                                    <Setter Property="Visibility" TargetName="Up_Arrow" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Trigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource HoverOff}"
                                                         x:Name="HoverOff_BeginStoryboard" />
                                    </Trigger.ExitActions>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                                    </Trigger.EnterActions>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Trigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource PressedOff}"
                                                         x:Name="PressedOff_BeginStoryboard" />
                                    </Trigger.ExitActions>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource PressedOn}"
                                                         x:Name="PressedOn_BeginStoryboard" />
                                    </Trigger.EnterActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="HoverOn">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                   Storyboard.TargetName="HoverRectangle"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="HoverOff">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                   Storyboard.TargetName="HoverRectangle"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="PressedOn">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                   Storyboard.TargetName="Rectangle"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.6" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="PressedOff">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                   Storyboard.TargetName="Rectangle"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Border Padding="{TemplateBinding Padding}"
                                    Background="#FFFFFFFF"
                                    BorderBrush="{DynamicResource NormalBorderBrush}"
                                    BorderThickness="1,1,1,1"
                                    CornerRadius="2,2,2,2"
                                    x:Name="border">
                                <Grid SnapsToDevicePixels="False" Background="Transparent">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="21" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Grid>
                                        <Grid.LayoutTransform>
                                            <TransformGroup>
                                                <TransformGroup.Children>
                                                    <TransformCollection>
                                                        <RotateTransform Angle="-90" />
                                                    </TransformCollection>
                                                </TransformGroup.Children>
                                            </TransformGroup>
                                        </Grid.LayoutTransform>
                                        <Rectangle Margin="3,3,1,3"
                                                   x:Name="Rectangle"
                                                   Fill="{DynamicResource NormalBrush}"
                                                   Stroke="{DynamicResource NormalBorderBrush}"
                                                   StrokeThickness="1"
                                                   RadiusX="2"
                                                   RadiusY="2" />
                                        <Rectangle Margin="3,3,1,3"
                                                   x:Name="HoverRectangle"
                                                   Fill="{DynamicResource HoverBrush}"
                                                   Stroke="{DynamicResource NormalBorderBrush}"
                                                   StrokeThickness="1"
                                                   RadiusX="2"
                                                   RadiusY="2"
                                                   Opacity="0" />
                                        <Path HorizontalAlignment="Center"
                                              x:Name="Up_Arrow"
                                              VerticalAlignment="Center"
                                              Fill="{DynamicResource GlyphBrush}"
                                              Data="M 0 0 L 4 4 L 8 0 Z" />
                                        <Path Visibility="Collapsed"
                                              HorizontalAlignment="Center"
                                              x:Name="Down_Arrow"
                                              VerticalAlignment="Center"
                                              Fill="{DynamicResource GlyphBrush}"
                                              Data="M 0 4 L 4 0 L 8 4 Z" />
                                    </Grid>
                                    <ContentPresenter SnapsToDevicePixels="True"
                                                      HorizontalAlignment="Center"
                                                      Margin="2,4,4,0"
                                                      VerticalAlignment="Top"
                                                      Grid.Row="1"
                                                      RecognizesAccessKey="True">
                                        <ContentPresenter.LayoutTransform>
                                            <TransformGroup>
                                                <TransformGroup.Children>
                                                    <TransformCollection>
                                                        <RotateTransform Angle="-90" />
                                                    </TransformCollection>
                                                </TransformGroup.Children>
                                            </TransformGroup>
                                        </ContentPresenter.LayoutTransform>
                                    </ContentPresenter>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Fill"
                                            TargetName="Rectangle"
                                            Value="{DynamicResource DisabledBackgroundBrush}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="border"
                                            Value="{DynamicResource DisabledBorderBrush}" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Visibility" TargetName="Up_Arrow" Value="Collapsed" />
                                    <Setter Property="Visibility" TargetName="Down_Arrow" Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Trigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource HoverOff}"
                                                         x:Name="HoverOff_BeginStoryboard" />
                                    </Trigger.ExitActions>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                                    </Trigger.EnterActions>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Trigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource PressedOff}"
                                                         x:Name="PressedOff_BeginStoryboard" />
                                    </Trigger.ExitActions>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource PressedOn}"
                                                         x:Name="PressedOn_BeginStoryboard" />
                                    </Trigger.EnterActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="HoverOn">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                   Storyboard.TargetName="HoverRectangle"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="HoverOff">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                   Storyboard.TargetName="HoverRectangle"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="PressedOn">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                   Storyboard.TargetName="Rectangle"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.6" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="PressedOff">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                   Storyboard.TargetName="Rectangle"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Border Padding="{TemplateBinding Padding}"
                                    CornerRadius="2,2,2,2"
                                    BorderThickness="1,1,1,1"
                                    Background="#FFFFFFFF"
                                    BorderBrush="{DynamicResource NormalBorderBrush}"
                                    x:Name="border">
                                <Grid SnapsToDevicePixels="False" Background="Transparent">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="21" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid>
                                        <Grid.LayoutTransform>
                                            <TransformGroup>
                                                <TransformGroup.Children>
                                                    <TransformCollection>
                                                        <RotateTransform Angle="180" />
                                                    </TransformCollection>
                                                </TransformGroup.Children>
                                            </TransformGroup>
                                        </Grid.LayoutTransform>
                                        <Rectangle Margin="3,3,3,3"
                                                   x:Name="Rectangle"
                                                   Fill="{DynamicResource NormalBrush}"
                                                   Stroke="{DynamicResource NormalBorderBrush}"
                                                   StrokeThickness="1"
                                                   RadiusX="2"
                                                   RadiusY="2" />
                                        <Rectangle Margin="3,3,3,3"
                                                   x:Name="HoverRectangle"
                                                   Fill="{DynamicResource HoverBrush}"
                                                   Stroke="{DynamicResource NormalBorderBrush}"
                                                   StrokeThickness="1"
                                                   RadiusX="2"
                                                   RadiusY="2"
                                                   Opacity="0" />
                                        <Path HorizontalAlignment="Center"
                                              x:Name="Up_Arrow"
                                              VerticalAlignment="Center"
                                              Fill="{DynamicResource GlyphBrush}"
                                              Data="M 0 0 L 4 4 L 8 0 Z" />
                                        <Path Visibility="Collapsed"
                                              HorizontalAlignment="Center"
                                              x:Name="Down_Arrow"
                                              VerticalAlignment="Center"
                                              Fill="{DynamicResource GlyphBrush}"
                                              Data="M 0 4 L 4 0 L 8 4 Z" />
                                    </Grid>
                                    <ContentPresenter SnapsToDevicePixels="True"
                                                      HorizontalAlignment="Left"
                                                      Margin="4,3,0,3"
                                                      VerticalAlignment="Center"
                                                      Grid.Column="1"
                                                      RecognizesAccessKey="True" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="BorderBrush"
                                            TargetName="border"
                                            Value="{DynamicResource DisabledBorderBrush}" />
                                    <Setter Property="Fill"
                                            TargetName="Rectangle"
                                            Value="{DynamicResource DisabledBackgroundBrush}" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Visibility" TargetName="Up_Arrow" Value="Collapsed" />
                                    <Setter Property="Visibility" TargetName="Down_Arrow" Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Trigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource HoverOff}"
                                                         x:Name="HoverOff_BeginStoryboard" />
                                    </Trigger.ExitActions>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                                    </Trigger.EnterActions>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Trigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource PressedOff}"
                                                         x:Name="PressedOff_BeginStoryboard" />
                                    </Trigger.ExitActions>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource PressedOn}"
                                                         x:Name="PressedOn_BeginStoryboard" />
                                    </Trigger.EnterActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="HoverOn">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                   Storyboard.TargetName="HoverRectangle"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="HoverOff">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                   Storyboard.TargetName="HoverRectangle"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="PressedOn">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                   Storyboard.TargetName="Rectangle"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.6" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="PressedOff">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                   Storyboard.TargetName="Rectangle"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Border Padding="{TemplateBinding Padding}"
                                    CornerRadius="2,2,2,2"
                                    Background="#FFFFFFFF"
                                    BorderBrush="{DynamicResource NormalBorderBrush}"
                                    BorderThickness="1,1,1,1"
                                    x:Name="border">
                                <Grid SnapsToDevicePixels="False" Background="Transparent">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="21" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Grid>
                                        <Grid.LayoutTransform>
                                            <TransformGroup>
                                                <TransformGroup.Children>
                                                    <TransformCollection>
                                                        <RotateTransform Angle="90" />
                                                    </TransformCollection>
                                                </TransformGroup.Children>
                                            </TransformGroup>
                                        </Grid.LayoutTransform>
                                        <Rectangle Margin="3,3,3,3"
                                                   x:Name="Rectangle"
                                                   Fill="{DynamicResource NormalBrush}"
                                                   Stroke="{DynamicResource NormalBorderBrush}"
                                                   StrokeThickness="1"
                                                   RadiusX="2"
                                                   RadiusY="2" />
                                        <Rectangle Margin="3,3,3,3"
                                                   x:Name="HoverRectangle"
                                                   Fill="{DynamicResource HoverBrush}"
                                                   Stroke="{DynamicResource NormalBorderBrush}"
                                                   StrokeThickness="1"
                                                   RadiusX="2"
                                                   RadiusY="2"
                                                   Opacity="0" />
                                        <Path HorizontalAlignment="Center"
                                              x:Name="Up_Arrow"
                                              VerticalAlignment="Center"
                                              Fill="{DynamicResource GlyphBrush}"
                                              Data="M 0 0 L 4 4 L 8 0 Z" />
                                        <Path Visibility="Collapsed"
                                              HorizontalAlignment="Center"
                                              x:Name="Down_Arrow"
                                              VerticalAlignment="Center"
                                              Fill="{DynamicResource GlyphBrush}"
                                              Data="M 0 4 L 4 0 L 8 4 Z" />
                                    </Grid>
                                    <ContentPresenter SnapsToDevicePixels="True"
                                                      HorizontalAlignment="Center"
                                                      Margin="4,4,2,0"
                                                      VerticalAlignment="Top"
                                                      Grid.Row="1"
                                                      RecognizesAccessKey="True">
                                        <ContentPresenter.LayoutTransform>
                                            <TransformGroup>
                                                <TransformGroup.Children>
                                                    <TransformCollection>
                                                        <RotateTransform Angle="90" />
                                                    </TransformCollection>
                                                </TransformGroup.Children>
                                            </TransformGroup>
                                        </ContentPresenter.LayoutTransform>
                                    </ContentPresenter>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Fill"
                                            TargetName="Rectangle"
                                            Value="{DynamicResource DisabledBackgroundBrush}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="border"
                                            Value="{DynamicResource DisabledBorderBrush}" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Visibility" TargetName="Up_Arrow" Value="Collapsed" />
                                    <Setter Property="Visibility" TargetName="Down_Arrow" Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Trigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource HoverOff}"
                                                         x:Name="HoverOff_BeginStoryboard" />
                                    </Trigger.ExitActions>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                                    </Trigger.EnterActions>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Trigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource PressedOff}"
                                                         x:Name="PressedOff_BeginStoryboard" />
                                    </Trigger.ExitActions>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource PressedOn}"
                                                         x:Name="PressedOn_BeginStoryboard" />
                                    </Trigger.EnterActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ExpanderHeaderFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border>
                                <Rectangle SnapsToDevicePixels="true"
                                           Margin="0"
                                           Stroke="Black"
                                           StrokeDashArray="1 2"
                                           StrokeThickness="1" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type Expander}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Expander}">
                            <Border SnapsToDevicePixels="true"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1,1,1,1"
                                    CornerRadius="3">
                                <DockPanel>
                                    <ToggleButton FontFamily="{TemplateBinding FontFamily}"
                                                  FontSize="{TemplateBinding FontSize}"
                                                  FontStretch="{TemplateBinding FontStretch}"
                                                  FontStyle="{TemplateBinding FontStyle}"
                                                  FontWeight="{TemplateBinding FontWeight}"
                                                  Foreground="{TemplateBinding Foreground}"
                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Padding="{TemplateBinding Padding}"
                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                                                  Margin="1,1,1,0"
                                                  MinHeight="0"
                                                  MinWidth="0"
                                                  x:Name="HeaderSite"
                                                  Style="{StaticResource ExpanderDownHeaderStyle}"
                                                  Content="{TemplateBinding Header}"
                                                  ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                                  IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                  DockPanel.Dock="Top" />
                                    <Grid Visibility="Collapsed" x:Name="grid">
                                        <Border Background="{DynamicResource ShadeBrush}"
                                                BorderBrush="{DynamicResource NormalBorderBrush}"
                                                BorderThickness="1,0,1,1"
                                                CornerRadius="3,3,3,3"
                                                x:Name="border"
                                                Margin="0,0,0,0" />
                                        <ContentPresenter Focusable="false"
                                                          HorizontalAlignment="Left"
                                                          Margin="1,1,1,1"
                                                          x:Name="ExpandSite"
                                                          VerticalAlignment="Top"
                                                          DockPanel.Dock="Bottom" />
                                    </Grid>
                                </DockPanel>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded" Value="true">
                                    <Setter Property="Visibility" TargetName="grid" Value="Visible" />
                                </Trigger>
                                <Trigger Property="ExpandDirection" Value="Down">
                                    <Setter Property="Margin" TargetName="grid" Value="1,0,1,0" />
                                </Trigger>
                                <Trigger Property="ExpandDirection" Value="Right">
                                    <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right" />
                                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left" />
                                    <Setter Property="Style"
                                            TargetName="HeaderSite"
                                            Value="{StaticResource ExpanderRightHeaderStyle}" />
                                    <Setter Property="Background"
                                            TargetName="border"
                                            Value="{DynamicResource ShadeBrushRight}" />
                                    <Setter Property="Margin" TargetName="grid" Value="0,1,0,1" />
                                </Trigger>
                                <Trigger Property="ExpandDirection" Value="Up">
                                    <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top" />
                                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom" />
                                    <Setter Property="Style"
                                            TargetName="HeaderSite"
                                            Value="{StaticResource ExpanderUpHeaderStyle}" />
                                    <Setter Property="Background"
                                            TargetName="border"
                                            Value="{DynamicResource ShadeBrushBottom}" />
                                    <Setter Property="Margin" TargetName="grid" Value="1,0,1,0" />
                                </Trigger>
                                <Trigger Property="ExpandDirection" Value="Left">
                                    <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left" />
                                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right" />
                                    <Setter Property="Style"
                                            TargetName="HeaderSite"
                                            Value="{StaticResource ExpanderLeftHeaderStyle}" />
                                    <Setter Property="Background"
                                            TargetName="border"
                                            Value="{DynamicResource ShadeBrushLeft}" />
                                    <Setter Property="Margin" TargetName="grid" Value="0,1,0,1" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground"
                                            Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>
</ResourceDictionary>