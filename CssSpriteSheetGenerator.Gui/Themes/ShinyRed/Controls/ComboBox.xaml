<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d">
    <Style x:Key="BugFix" />

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template" Value="{DynamicResource ComboBoxTemplate}" />
    </Style>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="HoverRectangle"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="HoverRectangle"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="Rectangle"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.6" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="Rectangle"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>

            <Rectangle Fill="Transparent" />
            <Rectangle x:Name="Rectangle"
                       Grid.Column="1" Grid.ColumnSpan="2"
                       HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                       Width="Auto" Height="Auto"
                       RadiusX="3" RadiusY="3"
                       Fill="{DynamicResource NormalBrush}"
                       Stroke="{DynamicResource NormalBorderBrush}"
                       StrokeThickness="2" />
            <Rectangle x:Name="HoverRectangle"
                       Grid.Column="2" Grid.ColumnSpan="2"
                       HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                       Width="Auto" Height="Auto"
                       RadiusX="3" RadiusY="3"
                       Fill="{DynamicResource HoverBrush}"
                       Stroke="{x:Null}"
                       StrokeThickness="2"
                       Opacity="0"
                       Margin="0,2,2,2" />
            <Rectangle Grid.Column="1"
                       HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                       Width="Auto" Height="Auto"
                       RadiusX="2" RadiusY="2"
                       Stroke="{x:Null}"
                       Margin="2,2,0,2">
                <Rectangle.Fill>
                    <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                </Rectangle.Fill>
            </Rectangle>
            <Path x:Name="Arrow"
                  Grid.Column="2"
                  HorizontalAlignment="Center" VerticalAlignment="Center"
                  Data="M 0 0 L 4 4 L 8 0 Z"
                  Margin="-2,2,0,0"
                  Fill="{DynamicResource GlyphBrush}"
                  d:LayoutOverrides="Width, Height" />
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOff}"
                                     x:Name="PressedOff_BeginStoryboard" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOn}"
                                     x:Name="PressedOn_BeginStoryboard" />
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Fill"
                        Value="{DynamicResource DisabledBackgroundBrush}"
                        TargetName="Rectangle" />
                <Setter Property="Stroke"
                        Value="{DynamicResource DisabledBorderBrush}"
                        TargetName="Rectangle" />
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                <Setter Property="Fill" Value="{DynamicResource DisabledForegroundBrush}" TargetName="Arrow" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="23" />
            </Grid.ColumnDefinitions>

            <ContentPresenter x:Name="ContentSite"
                              Width="121"
                              HorizontalAlignment="Left" VerticalAlignment="Center"
                              Margin="3"
                              IsHitTestVisible="False"
                              Content="{TemplateBinding SelectionBoxItem}"
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" />
            <TextBox x:Name="PART_EditableTextBox"
                     HorizontalAlignment="Left" VerticalAlignment="Center"
                     Width="121"
                     Margin="3"
                     Focusable="True"
                     Background="Transparent"
                     Visibility="Hidden"
                     Style="{x:Null}"
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Template="{DynamicResource ComboBoxTextBox}" />
            <ToggleButton x:Name="ToggleButton"
                          Width="{TemplateBinding ActualWidth}"
                          HorizontalAlignment="Right"
                          Focusable="False"
                          ClickMode="Press"
                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          Template="{DynamicResource ComboBoxToggleButton}" />
            <Popup IsOpen="{TemplateBinding IsDropDownOpen}"
                   Placement="Bottom"
                   x:Name="Popup"
                   Focusable="False"
                   AllowsTransparency="True"
                   PopupAnimation="Slide">
                <Grid x:Name="DropDown"
                      MaxHeight="{TemplateBinding MaxDropDownHeight}"
                      MinWidth="{TemplateBinding ActualWidth}"
                      SnapsToDevicePixels="True">
                    <Border x:Name="DropDownBorder"
                            Background="{DynamicResource ShadeBrush}"
                            BorderBrush="{DynamicResource SolidBorderBrush}"
                            BorderThickness="1" />
                    <ScrollViewer Margin="4,6"
                                  SnapsToDevicePixels="True"
                                  HorizontalScrollBarVisibility="Auto"
                                  VerticalScrollBarVisibility="Auto"
                                  CanContentScroll="True">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                    </ScrollViewer>
                </Grid>
            </Popup>
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="MinHeight" Value="95" TargetName="DropDownBorder" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
            <Trigger Property="AllowsTransparency" SourceName="Popup" Value="true">
                <Setter Property="Margin" Value="0" TargetName="DropDownBorder" />
                <Setter Property="CornerRadius" TargetName="DropDownBorder" Value="3" />
            </Trigger>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Visibility" Value="Visible" TargetName="PART_EditableTextBox" />
                <Setter Property="Visibility" Value="Hidden" TargetName="ContentSite" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>